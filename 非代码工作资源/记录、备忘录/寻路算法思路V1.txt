给出一个大小为10*10的棋盘，棋盘上零散地分布着一些价值点（输入坐标和价值记为V）和目标点（输入坐标和需求记为C），棋盘上还分布有障碍（输入坐标），所有输入数据均为整型

多到单路径生成算法
    1° 前向BFS建立影响热力图
        第一步，从目标点出发BFS计算每一个节点到节点所需的BFS距离遍历，距离记为D
        第二步，对于给定的价值点，采用（当前节点影响值I）=（(当前价值V ^ 2) * 可调参数）的方法计算储存
        第三步，对于单个价值点，从其出发BFS遍历周围节点记距离为D*
            计算周围节点（附加影响值I*）=（当前节点影响值I/(（1+BFS距离D*）*可调参数) ）
            若附加影响值低于可设定的阈值参数则舍弃
        第四步，遍历进行第三步，将每个节点最终影响值（FI）计算为（当前节点影响值I）和所有（附加影响值I*）的加总
    2° 反向BFS获取源点、路径
        1 反向BFS获取源点路径树
            第一步：从目标点出发反向BFS搜索，建立可维护的open表和close表，以目标点为根节点建立搜索树
                初始加入周围所有可通行的邻居节点进入open表
                open表采用大根堆的办法维护，以节点最终影响值为大根堆比较值
            第二步：每次BFS搜索取出open中根节点加入close表，维护大根堆，随后继续加入新的可通行的邻居节点
                若加入节点为有价值节点，则累计计算加入价值
                若最终计算已累计价值大于目标节点需求值，则BFS终止
            每加入新节点依邻居关系建立搜索树中新节点父子关系
            迭代进行上述操作加入所有节点
            若BFS终止，则返回close表中所有的有价值节点，记为[源点]，存储树状结构
        2 剪枝操作删除多余节点
            检测搜索树中，若某一节点自身及所有子树不含[源点]，则删除该节点   
        3 后序遍历形成路径操作
            对搜索树进行后序遍历，遍历出序列保存，即为所需操作序列